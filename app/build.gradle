plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-android-extensions"
    id "kotlin-kapt"
    id "androidx.navigation.safeargs.kotlin"
    id "dagger.hilt.android.plugin"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "bela.mi.vi.blok"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 26
        versionName "2.1.0"
        testInstrumentationRunner "bela.mi.vi.BelaTestRunner"
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", variant.versionName + "." + variant.versionCode
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding = true
    }
}

configurations.all {
    // androidx.test includes junit 4.12 so this will force that entire project uses same junit version
    resolutionStrategy.force "junit:junit:${versions.junit}"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutinesAndroidVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutinesAndroidVersion}"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    // Android UI and appcompat
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "com.android.support.constraint:constraint-layout:${versions.constraintLayout}"
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerView}"
    implementation "androidx.fragment:fragment-ktx:${versions.fragment}"
    implementation "androidx.preference:preference-ktx:${versions.preference}"
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigation}"
    // Room
    implementation "androidx.room:room-ktx:${versions.room}"
    kapt "androidx.room:room-compiler:${versions.room}"
    // Hilt (Dagger dependency injection)
    implementation "com.google.dagger:hilt-android:${versions.hiltDagger}"
    kapt "com.google.dagger:hilt-compiler:${versions.hiltDagger}"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:${versions.hilt}"
    implementation "androidx.hilt:hilt-work:${versions.hilt}"
    kapt "androidx.hilt:hilt-compiler:${versions.hilt}"
    // Work
    implementation "androidx.work:work-runtime-ktx:${versions.work}"
    // Stateless4j state machine
    implementation "com.github.stateless4j:stateless4j:${versions.stateless4j}"
    // ProcessPhoenix to restart app after restoring database
    implementation "com.jakewharton:process-phoenix:${versions.processPhoenix}"
    // Unit test
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutinesAndroidVersion}"
    testImplementation "io.mockk:mockk:${versions.mockk}"
    // Android Instrumented test
    androidTestImplementation "androidx.test:core:${versions.androidTest}"
    //androidTestImplementation "androidx.test:core-ktx:${versions.androidTest}"
    androidTestImplementation "androidx.test:runner:${versions.androidTest}"
    // Allows to inspect real database content from browser when debug build is running on device
    //debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
    // Leak canary
    //debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakCanary}"
}
